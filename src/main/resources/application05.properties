#shardingjdbc分片策略
#配置数据源，给数据源起逻辑库名
spring.shardingsphere.datasource.names=m0,s1

spring.main.allow-bean-definition-overriding=true

#配置主库数据源具体内容，包含连接池，驱动，地址(库的ip，端口号，物理名称)，用户名和密码
spring.shardingsphere.datasource.m0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m0.url=jdbc:mysql://localhost:3306/user_db?serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.m0.username=root
spring.shardingsphere.datasource.m0.password=123

#配置从库数据源具体内容，包含连接池，驱动，地址(库的ip，端口号，物理名称)，用户名和密码
spring.shardingsphere.datasource.s1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.s1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.s1.url=jdbc:mysql://localhost:3307/user_db?serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.s1.username=root
spring.shardingsphere.datasource.s1.password=123

#主库从库逻辑数据源定义ds0为user_db
spring.shardingsphere.sharding.master-slave-rules.ds0.master-data-source-name=m0
spring.shardingsphere.sharding.master-slave-rules.ds0.slave-data-source-names=s1

#配置user_db数据库里面t_user表  专库专表
spring.shardingsphere.sharding.tables.t_user.actual-data-nodes=ds0.t_user

#t_user表主键生成策略
spring.shardingsphere.sharding.tables.t_user.key-generator.column=user_id
spring.shardingsphere.sharding.tables.t_user.key-generator.type=SNOWFLAKE

#打开sql输出日志
spring.shardingsphere.props.sql.show=true